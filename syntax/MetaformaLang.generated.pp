[
   NbsCount                   -- KW["#("] _1 KW[")"],
   Nbs                        -- KW["$("] _1 KW[")"],
   NbsOp                      -- _1,
   NbsOp.1:iter-star-sep      -- _1 KW[","],
   Int                        -- _1,
   Const                      -- _1,
   Bool                       -- _1,
   ModHolder                  -- _1,
   Par                        -- KW["("] _1 KW[")"],
   ByteArr                    -- KW["["] _1 KW["]"],
   ByteArr.1:iter-star-sep    -- _1 KW[","],
   String                     -- _1,
   Mod                        -- _1 KW["%"] _2,
   Not                        -- KW["!"] _1,
   Mul                        -- _1 KW["*"] _2,
   Div                        -- _1 KW["/"] _2,
   Plus                       -- _1 KW["+"] _2,
   Min                        -- _1 KW["-"] _2,
   Lt                         -- _1 KW["<"] _2,
   Gt                         -- _1 KW[">"] _2,
   LtEq                       -- _1 KW["<="] _2,
   GtEq                       -- _1 KW[">="] _2,
   Eq                         -- _1 KW["=="] _2,
   Neq                        -- _1 KW["!="] _2,
   And                        -- _1 KW["&&"] _2,
   Or                         -- _1 KW["||"] _2,
   AndBit                     -- _1 KW["&"] _2,
   OrBit                      -- _1 KW["|"] _2,
   Start                      -- _1 _2 _3,
   Start.2:iter-star          -- _1,
   Start.3:iter-star          -- _1,
   Module                     -- KW["module"] _1,
   Meta                       -- KW["meta"] KW["{"] _1 _2 KW["}"],
   Meta.1:iter-star           -- _1,
   Meta.2:iter-star           -- _1,
   Module                     -- KW["module"] KW["{"] _1 KW["}"],
   Module.1:iter-star         -- _1,
   FunDecl                    -- _1 _2 KW["("] _3 KW[")"] KW["{"] _4 _5 KW["}"],
   FunDecl.3:iter-star-sep    -- _1 KW[","],
   FunDecl.4:iter-star        -- _1,
   FunDecl.5:iter-star        -- _1,
   Elem                       -- _1 _2,
   MetaPacket                 -- KW["metapacket"] _1 KW["{"] _2 KW["}"],
   MetaPacket.2:iter-star     -- _1,
   Packet                     -- KW["packet"] _1 KW["{"] _2 KW["}"],
   Packet.2:iter-star         -- _1,
   VarDecl                    -- _1 _2 KW[";"],
   VarDecl.2:iter-star-sep    -- _1 KW[","],
   VarRef                     -- _1,
   FieldRef                   -- _1 KW["."] _2,
   FieldRef                   -- _1 KW["."] _2,
   Assign                     -- _1 KW["="] _2,
   AssignList                 -- _1,
   AssignList.1:iter-star-sep -- _1 KW[","],
   State                      -- KW["state"] _1 KW["{"] _2 KW["}"],
   State.2:iter-star          -- _1,
   EvHdlr                     -- KW["when"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   EvHdlr.2:iter-star         -- _1,
   Event                      -- KW["receive"] KW["("] _1 _2 KW[")"],
   Event                      -- _1,
   Rate                       -- KW["rate"] _1,
   Unicast                    -- KW["unicast"] _1 KW["("] _2 KW[")"] KW["on"] _3 _4 KW[";"],
   Unicast.4:opt              -- _1,
   Assign                     -- _1 KW["="] _2 KW[";"],
   FuncCall                   -- _1 KW["("] _2 KW[")"],
   FuncCall.2:iter-star-sep   -- _1 KW[","],
   FuncCall                   -- _1 KW["("] _2 KW[")"] KW[";"],
   FuncCall.2:iter-star-sep   -- _1 KW[","],
   FuncCall                   -- _1 KW["."] _2 KW["("] _3 KW[")"] KW[";"],
   FuncCall.3:iter-star-sep   -- _1 KW[","],
   Stmt                       -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   Stmt.1:iter-star           -- _1,
   IfElse                     -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   If                         -- KW["if"] KW["("] _1 KW[")"] _2,
   Goto                       -- KW["goto"] _1 KW[";"],
   Group                      -- KW["group"] _1 KW["{"] _2 KW["}"],
   Group.2:iter-star-sep      -- _1 KW[","],
   Disconnect                 -- KW["disconnect"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   Connect                    -- KW["connect"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   Rotate                     -- KW["rotate"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   For                        -- KW["for"] KW["("] _1 _2 KW[":"] _3 KW[")"] KW["{"] _4 KW["}"],
   Send                       -- KW["send"] _1 KW["("] _2 KW[")"] KW["to"] _3 KW[";"],
   Send.2:iter-star-sep       -- _1 KW[","]
]
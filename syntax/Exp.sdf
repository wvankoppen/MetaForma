module Exp

imports Common
imports MetaformaLang
imports lexical/MetaformaLang-Identifiers

exports


  context-free syntax
	Ref		 				-> Exp
	"#(" NbsOp ")"			-> Exp{"NbsCount"}
	"$(" NbsOp ")"			-> Nbs{"Nbs"}
%%	"!$(" NbsOp ")"			-> Exp{"NbsNone"}
	{NbsFilter ","}+	-> NbsOp{"NbsOp"}
	%% ConnFilter						-> NbsOp{"NbsOp"}
	%% {NbsFilter ","}+				-> NbsOp{"NbsOp"}
	%% Exp 					-> ConnFilter{"ConnFilter"}
	%% Exp "->" Exp			-> ConnFilter{"ConnFilter"}
	
	NbsFilterKey ":" Exp -> NbsFilter{"NbsFilter"}
	lexical syntax
	"metaPart" 				-> NbsFilterKey
	"connected" 			-> NbsFilterKey
	"inRegion" 				-> NbsFilterKey
	"metaID" 				-> NbsFilterKey
	"connDest" 				-> NbsFilterKey
	"connSource"			-> NbsFilterKey
	ModHolderRef			-> NbsFilterElem
	 context-free syntax
	
	ID 						-> MetaPart{"MetaPart"}
	INT						-> Exp{"Int"}
	Const					-> Exp{"Const"}
	ConstLan					-> Exp{"Const"}
	Bool					-> Exp{"Bool"}
	ModHolderRef				-> Exp
	"(" Exp ")"			    -> Exp{"Par"}
	"[" {Exp ","}* "]"		-> Exp{"ByteArr"}
	STRING					-> Exp{"String"}
	
	 
	
	Exp "%"	Exp					-> Exp{left,"Mod"}
	"!" Exp 					-> Exp{right,"Not"}
	"-" Exp 					-> Exp{right,"Min"}
	Exp "-" Exp 				-> Exp{right,"Min"}
	Exp "*" Exp					-> Exp{left,"Mul"}
	Exp "/" Exp					-> Exp{left,"Div"}
	Exp "+" Exp					-> Exp{left,"Plus"}
	Exp "-" Exp					-> Exp{left,"Min"}
	Exp "<" Exp					-> Exp{left,"Lt"} 
    Exp ">" Exp					-> Exp{left,"Gt"}
    Exp "<=" Exp				-> Exp{left,"LtEq"}
    Exp ">=" Exp				-> Exp{left,"GtEq"}
    Exp "==" Exp				-> Exp{left,"Eq"} 
    Exp "!=" Exp				-> Exp{left,"Neq"} 
	Exp "&&" Exp				-> Exp{left,"And"}
	Exp "||" Exp				-> Exp{left,"Or"}
	Exp "&" Exp					-> Exp{left,"AndBit"}
	Exp "|" Exp					-> Exp{left,"OrBit"}
	
	context-free priorities
	{
		Exp "%"	Exp					-> Exp
	} > {right:
		"!" Exp 					-> Exp
	} > { left:
		Exp "*" Exp					-> Exp
		Exp "/" Exp					-> Exp
	} > { left:
		Exp "+" Exp					-> Exp
		Exp "-" Exp					-> Exp
	} > { non-assoc:
    	Exp "<" Exp					-> Exp
    	Exp ">" Exp					-> Exp
    	Exp "<=" Exp				-> Exp
    	Exp ">=" Exp				-> Exp
    	Exp "==" Exp				-> Exp
    	Exp "!=" Exp				-> Exp
	} > {left:
		Exp "&&" Exp				-> Exp
	} > {left:
		Exp "||" Exp				-> Exp
	} > {left:
		Exp "&" Exp					-> Exp
	} > {left:	
		Exp "|" Exp					-> Exp
	}
	
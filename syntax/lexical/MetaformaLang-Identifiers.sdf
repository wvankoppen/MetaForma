module lexical/MetaformaLang-Identifiers
imports MetaformaLang

exports
	sorts Id String Time Obj
	
lexical syntax
	[a-zA-Z][a-zA-Z0-9\_]* -> ID
    [0-9]+          -> INT
	~[\"]*	-> String
	
lexical restrictions
	ID -/- [a-zA-Z0-9\_]
	"var" -/- [a-zA-Z0-9\_]
	String -/- ~[\"]
	
	

lexical syntax
	
	"if"			-> ID {reject}
	"else"			-> ID {reject}
	"for"			-> ID {reject}
	"while"			-> ID {reject}
	"wait"			-> ID {reject}
	"until"			-> ID {reject}
	"consensus"		-> ID {reject}
	"goto"			-> ID {reject}
	"when"			-> ID {reject}
	
	 
	 "red"			-> Color
	 "blue"			-> Color
	 "green"		-> Color
	 "yellow"		-> Color
	 "cyan"		-> Color
	
	
	
	"false"			-> Bool
	"true"			-> Bool
	
	"MALE"			-> ConstLan
	"FEMALE"		-> ConstLan
	"WEST"			-> ConstLan
	"EAST"			-> ConstLan
	"NORTH"			-> ConstLan
	"SOUTH"			-> ConstLan
	"MAX_BYTE"		-> Const
	"null"			-> Const

	
	
	
	
	
	"connect"		-> Core
	"disconnect"	-> Core
	"rotate"		-> Core
	"stop"			-> Core
	"rotate_continuous"	-> Core
	"disconnect_part"	-> Core
	"connect_part"	-> Core
	
	
	
	
	
	context-free syntax
	"boolean"		-> Type{"Boolean"}
	"byte"			-> Type{"Byte"}
	"void"			-> Type{"Void"}
	"byte" "[" "]"	-> Type{"ByteArr"}
	
	"meta"			-> Obj{"Meta"}
	"module"		-> Obj{"Module"}
	"region"		-> Obj{"Region"}
	"debug"			-> Obj{"Debug"}
	"config"		-> Obj{"Config"}
	"config"		-> Obj{"Config"}
	
	 Const			-> ID {reject}
	 ConstLan			-> ID {reject}
	 Bool			-> ID {reject}
	 Obj			-> ID {reject}
	 Core			-> ID {reject}
	

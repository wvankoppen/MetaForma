module nblhacks

imports
  lib/analysis-library.generated
  lib/analysis-library-internal.generated
  lib/index-library.generated


imports
  libstratego-lib
  libstratego-gpp
  libstratego-aterm
  include/MetaformaLang
  trans/constructors
  lib/editor-common.generated
  lib/compilation-library.generated
  libjava-front
  desugar
  constructors
  types
  names
  check
  project
  store
  
 strategies
	adjust-index-lookup(target__|namespace__, path__, prefix__):
        ModHolderRef(group, mod) -> <index-lookup-children(|Mod(), prefix__)> g
        where 
        	<target__> mod;
        	Def(u@[_, name|_]) := <index-lookup> group;
        	g := name{u}


strategies // Custom Ref rules

  nam-get-uses-keys :
    Ref(n) -> [n]

  nam-get-uses :
    Ref(n) -> [ (Var(), [n])
                 , (Field(), [n])
                 , (MetaPart(), [n])
                 , (Constant(), [n])
                 ]

  nam-annotate-names(|paths__, path__):
    Ref(n) -> <Ref(nam-annotate-use(|paths__, Var()))>


  adjust-index-lookup(target__|namespace__, path__, prefix__):
    Ref(n) -> <concat> [ [ 
    						  [Var()|path__]
                            , [Field()|path__]
                            , [MetaPart()|path__]
                            , [Constant()|path__]
                            , [Field()|[Module(), <last> path__]]
                            ]
                          ]
    where <target__> n
 
 strategies
 	// Reference resolving for Strategies switched off!
//  nam-get-uses-keys :
//     SequencePrimRef(n) -> [n]
//     where not ("Strategy" := n)
// 
//   nam-get-uses :
//     SequencePrimRef(n) -> [(Sequence(), [n])]
//     where not ("Strategy" := n)
// 
//   nam-annotate-names(|paths__, path__):
//     SequencePrimRef(n) -> <SequencePrimRef(nam-annotate-use(|paths__, Sequence()))>
//     where not ("Strategy" := n)
//     
//   adjust-index-lookup(target__|namespace__, path__, prefix__):
//     SequencePrimRef(n) -> [Def([Sequence()|path__])]
//     where 
//     	<target__> n;
//     	<debug(!"XXX")>n;
//     	if "Strategy" := n then
//     		strategy* := <debug(!"RET")><index-get-children(|Sequence(), "Strategy")> Def([Package(), <last> path__])
//     	else
//     		strategy* := []
//     	end


	strategies
        	
     // adjust-index-lookup(target__|namespace__, path__, prefix__):
     //    FieldRef(c, f) -> <index-lookup-children(|Field(), prefix__)> g
     //    where 
     //    	<debug>$["adjust-index-lookup"];<debug>(namespace__, path__, prefix__);
     //    	<target__> f;
     //    	Def(u@[_, name|_]) := <index-lookup> c;
     //    	g := name{u};
     //    	<debug>$[g found: [g]]
        	
        	
    	
	
  // adjust-index-lookup(target__|namespace__, path__, prefix__):
  //   Module() -> <concat> [ [[Class()|path__]]
  //                        , [Def([ClassFake(), Module()])]
  //                        ]
  //   where
  //   	<debug> "bla"


module MetaformaLang-Builders

imports 
	MetaformaLang-Builders.generated
 

builders
                                                                                   
  // This file can be used for custom analysis, builder and refactoring rules.     
  //                                                                               
  // See the imported file for a brief introduction and examples.                  

builders
                                                                                                                            
  provider : include/metaformalang.ctree                                                                                    
  provider : include/metaformalang-java.jar                                                                                 
                                                                                                                            
  observer : editor-analyze                        (multifile)                                                              
                                                                                                                            
  builder  : "Show abstract syntaxx"                = generate-aterm (openeditor) (realtime) (meta) (source)
  builder  : "Show desugared syntax"                = desugar-aterm (openeditor) (realtime) (meta) (source)
  builder  : "Show deffed syntax" = generate-deffed (openeditor) (meta) (source)
  builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (meta) (source)
  builder  : "Show index entries for current file" = index-currentfile (openeditor) (meta) 
  builder  : "Show index entries for all files" = index-allfiles (openeditor) (meta) 
  builder  : "Clear index" = index-cleanall (meta) (source)           
 //  builder  : "Show deffed syntax"                  = debug-generate-deffed (openeditor) (realtime) (meta) (source)          
 //  builder  : "Show analyzed syntax"                = debug-generate-analyzed (openeditor) (realtime) (meta) (source)        
 //  builder  : "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)  
 //  builder  : "Show index entries for all files"    = debug-index-show-all-files (openeditor) (realtime) (meta) (source)     
 //  builder  : "Clear index for current file"        = debug-index-clear-current (meta) (source)                              
 //  builder  : "Clear index"                         = debug-index-clear (meta) (source)                                      
 //  builder  : "Reload index"                        = debug-index-reload (meta) (source)                
 //  builder 	: "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
 //  builder		: "Desugar (selection)" = desugar-aterm (openeditor) (realtime) (meta) (source)
	// builder		: "Rename (selection)" = rename-aterm (openeditor) (realtime) (meta) (source)
	// builder		: "Store (selection)" = store-aterm (openeditor) (realtime) (meta) (source)
	builder		: "Jtree (selection)" = generate-java-aterm  (openeditor)(meta) (source)                             
  builder		: "Java code (selection)" = generate-java  (openeditor)(meta) (source)                                                                                                                          

refactorings

  pretty-print : pp-metaformalang-string

  refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
    shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
    input
      identifier : "new name" = ""

  on save : editor-save
Module("MetaformaLang.main.packed",Imports([Import("MetaformaLang.main"),Import("MetaformaLang-Builders"),Import("MetaformaLang-Colorer"),Import("MetaformaLang-Completions"),Import("MetaformaLang-Folding"),Import("MetaformaLang-Outliner"),Import("MetaformaLang-References"),Import("MetaformaLang-Syntax"),Import("MetaformaLang-Builders.generated"),Import("MetaformaLang-Colorer.generated"),Import("MetaformaLang-Completions.generated"),Import("MetaformaLang-Folding.generated"),Import("MetaformaLang-References.generated"),Import("MetaformaLang-Syntax.generated")]),[Language(" General properties",[LanguageName("MetaformaLang"),LanguageId("MetaformaLang"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the Metaforma language\"")),URL("http://strategoxt.org"),Extensions(Values(["mfa"])),Table("include/MetaformaLang.tbl"),StartSymbols([Sort("Start")])]),Builders("",[SemanticProvider("include/metaformalang.ctree"),SemanticProvider("include/metaformalang-java.jar"),SemanticObserver(Strategy("editor-analyze"),[MultiFile]),Builder(String("\"Show abstract syntaxx\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show desugared syntax\""),Strategy("desugar-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show deffed syntax\""),Strategy("generate-deffed"),[OpenEditor,Meta,Source]),Builder(String("\"Show analyzed syntax\""),Strategy("generate-analyzed"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show only manual store\""),Strategy("index-manual"),[OpenEditor,Meta]),Builder(String("\"Show index entries for current file\""),Strategy("index-currentfile"),[OpenEditor,Meta]),Builder(String("\"Show types\""),Strategy("index-types"),[OpenEditor,Meta]),Builder(String("\"Show index entries for all files\""),Strategy("index-allfiles"),[OpenEditor,Meta]),Builder(String("\"Clear index\""),Strategy("index-cleanall"),[Meta,Source]),Builder(String("\"Java code (selection)\""),Strategy("generate-java"),[Source])]),Refactorings("",[PrettyPrint(Strategy("pp-metaformalang-string")),Refactoring([Sort("ID")],String("\"Rename Entity\""),Strategy("rename-entity"),[Source,Cursor],[Shortcut(InteractionId(String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\""))),UserInput([IdInputField(String("\"new name\""),String("\"\""))])]),OnSave(Strategy("editor-save"),None)]),Colorer(" system colors",[ColorDef("darkyellow",Attribute(ColorRGB("127","127","0"),NoColor,NORMAL))]),Colorer("",[ColorRule(Sort("SysObj"),AttributeRef("darkblue")),ColorRule(Sort("Type"),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Sort("ConstLan"),AttributeRef("brown")),ColorRule(Sort("FuncPrimRef"),AttributeRef("brown")),ColorRule(Sort("FuncActuationRef"),Attribute(ColorRGB("127","0","0"),NoColor,BOLD)),ColorRule(Sort("ModHolderRef"),AttributeRef("darkyellow")),ColorRule(Sort("SysObj"),AttributeRef("darkblue")),ColorRule(Sort("ModuleFieldID"),AttributeRef("darkgreen")),ColorRule(Sort("ModuleMethodRef"),AttributeRef("darkgreen")),ColorRule(Sort("MetaFieldID"),AttributeRef("darkgreen")),ColorRule(Sort("MetaMethodRef"),AttributeRef("darkgreen")),ColorRule(Sort("RegionMethodRef"),AttributeRef("darkgreen")),ColorRule(Sort("PayloadID"),AttributeRef("darkgreen")),ColorRule(Sort("Bool"),AttributeRef("darkblue")),ColorRule(Sort("Module"),AttributeRef("darkblue")),ColorRule(Sort("Meta"),AttributeRef("darkblue")),ColorRule(Sort("Region"),AttributeRef("darkblue")),ColorDef("FuncActuationRef",Attribute(ColorRGB("128","0","0"),NoColor,BOLD)),ColorRule(ConstructorOnly(Constructor("ModHolder")),Attribute(ColorRGB("33","33","33"),NoColor,NORMAL))]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplateEx([Sort("Start")],NoCompletionPrefix,[String("\"program \""),Placeholder("<p>"),String("\"\\n\\n\""),Cursor],[Blank]),CompletionTemplateEx([Sort("Debug")],NoCompletionPrefix,[String("\"debug {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"module {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"meta {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"region {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"sequence \""),Placeholder("<s>"),String("\" {\\n\""),Cursor,String("\"\\n}\\n\"")],[]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"group \""),Placeholder("<g>"),String("\"[\""),Cursor,String("\"]\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"group [\""),Cursor,String("\"]\"")],[Blank]),CompletionTemplateEx([Sort("MainDef")],NoCompletionPrefix,[String("\"packet \""),Placeholder("<p>"),String("\" {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("PayloadDecl")],NoCompletionPrefix,[String("\"byte \""),Placeholder("<b>"),String("\";\""),Cursor],[Blank]),CompletionTemplateEx([Sort("PartDecl")],NoCompletionPrefix,[String("\"part [\""),Placeholder("<p>"),String("\" ];\\n\""),Cursor],[Blank]),CompletionTemplateEx([Sort("VarDecl")],NoCompletionPrefix,[String("\"byte \""),Placeholder("<b>"),String("\";\""),Cursor],[]),CompletionTemplateEx([Sort("VarDecl")],NoCompletionPrefix,[String("\"int \""),Placeholder("<i>"),String("\";\""),Cursor],[]),CompletionTemplateEx([Sort("VarDecl")],NoCompletionPrefix,[String("\"float \""),Placeholder("<f>"),String("\";\""),Cursor],[]),CompletionTemplateEx([Sort("Instr")],NoCompletionPrefix,[String("\"disconnect (\""),Placeholder("<e>"),String("\",\""),Placeholder("<e>"),String("\");\"")],[]),CompletionTemplateEx([Sort("Stmt")],NoCompletionPrefix,[String("\"if (\""),Placeholder("<e>"),String("\") {\\n\""),Placeholder("<s>"),String("\"\\n}\"")],[Blank]),CompletionTemplateEx([Sort("Stmt")],NoCompletionPrefix,[String("\"if (\""),Placeholder("<e>"),String("\") {\\n\""),Placeholder("<s1>"),String("\"\\n}\\nelse {\\n\""),Placeholder("<s2>"),String("\"\\n}\"")],[Blank]),CompletionTemplateEx([Sort("Stmt")],NoCompletionPrefix,[String("\"disconnect2 (\""),Placeholder("<e>"),String("\",\""),Placeholder("<e>"),String("\");\"")],[])]),Completions("",[CompletionProposer(Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Start"),Constructor("Program")),None),FoldRule(SortAndConstructor(Sort("Debug"),Constructor("Debug")),None),FoldRule(Sort("OptShowPackets1"),None),FoldRule(SortAndConstructor(Sort("ShowPackets"),Constructor("ShowPackets")),None),FoldRule(Sort("OptVisualize1"),None),FoldRule(SortAndConstructor(Sort("Visualize"),Constructor("Visualize")),None),FoldRule(SortAndConstructor(Sort("VisGroup"),Constructor("VisGroup")),None),FoldRule(SortAndConstructor(Sort("GroupDef"),Constructor("Group")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("Meta")),None),FoldRule(Sort("OptPartDecl1"),None),FoldRule(SortAndConstructor(Sort("PartDecl"),Constructor("MetaPartDecl")),None),FoldRule(SortAndConstructor(Sort("FuncDecl"),Constructor("FuncDecl")),None),FoldRule(SortAndConstructor(Sort("VarDecl"),Constructor("VarDecl")),None),FoldRule(SortAndConstructor(Sort("Exp"),Constructor("OrientMatch")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("Unicast")),None),FoldRule(SortAndConstructor(Sort("AssignList"),Constructor("AssignList")),None),FoldRule(SortAndConstructor(Sort("AssignElem"),Constructor("AssignElem")),None),FoldRule(SortAndConstructor(Sort("Nbs"),Constructor("Nbs")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("Assign")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("TryRegion")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("FuncCall")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("FuncCall")),None),FoldRule(SortAndConstructor(Sort("Stmt"),Constructor("FuncCall")),None),FoldRule(SortAndConstructor(Sort("FuncDecl"),Constructor("FuncDecl")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("Module")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("Region")),None),FoldRule(Sort("OptBorderDecl1"),None),FoldRule(SortAndConstructor(Sort("BorderDecl"),Constructor("BorderDecl")),None),FoldRule(SortAndConstructor(Sort("BorderItem"),Constructor("BorderItem")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("ConstDecl")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("PacketDecl")),None),FoldRule(SortAndConstructor(Sort("MainDef"),Constructor("Sequence")),None),FoldRule(SortAndConstructor(Sort("EvHdlr"),Constructor("EvHdlr")),None),FoldRule(SortAndConstructor(Sort("EvHdlrSemi"),Constructor("If")),None),FoldRule(Sort("Exp"),None),FoldRule(SortAndConstructor(Sort("Instr"),Constructor("Instr")),None),FoldRule(SortAndConstructor(Sort("InstrPost"),Constructor("Wait")),None),FoldRule(Sort("Exp"),None),FoldRule(SortAndConstructor(Sort("InstrPost"),Constructor("Until")),None),FoldRule(SortAndConstructor(Sort("Instr"),Constructor("Instr")),None)]),Outliner("",[OutlineRule(SortAndConstructor(Sort("Start"),Constructor("Program"))),OutlineRule(ConstructorOnly(Constructor("Debug"))),OutlineRule(ConstructorOnly(Constructor("ShowPackets"))),OutlineRule(SortAndConstructor(Sort("PacketRef"),Constructor("Packet"))),OutlineRule(ConstructorOnly(Constructor("Visualize"))),OutlineRule(ConstructorOnly(Constructor("VisGroup"))),OutlineRule(ConstructorOnly(Constructor("VisItem"))),OutlineRule(ConstructorOnly(Constructor("PacketDecl"))),OutlineRule(ConstructorOnly(Constructor("PayloadDecl"))),OutlineRule(ConstructorOnly(Constructor("PacketVarDecl"))),OutlineRule(Sort("MainDef")),OutlineRule(SortAndConstructor(Sort("MainDef"),Constructor("Class"))),OutlineRule(SortAndConstructor(Sort("MainDef"),Constructor("Sequence"))),OutlineRule(ConstructorOnly(Constructor("BorderItem"))),OutlineRule(Sort("Direction")),OutlineRule(SortAndConstructor(Sort("MainDef"),Constructor("Meta"))),OutlineRule(SortAndConstructor(Sort("MainDef"),Constructor("Region"))),OutlineRule(ConstructorOnly(Constructor("MetaPartDecl"))),OutlineRule(ConstructorOnly(Constructor("MetaPart"))),OutlineRule(ConstructorOnly(Constructor("FieldDecl"))),OutlineRule(ConstructorOnly(Constructor("FuncDecl")))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])
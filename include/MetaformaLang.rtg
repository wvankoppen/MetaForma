
regular tree grammar
  start Start
  productions
    ListStarOfExp0        -> ListPlusOfExp0
    ListStarOfExp0        -> <nil>()
    ListStarOfExp0        -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <cons>(Exp,ListStarOfExp0)
    ListStarOfStmt0       -> ListPlusOfStmt0
    ListStarOfStmt0       -> <nil>()
    ListStarOfStmt0       -> <conc>(ListStarOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListStarOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListPlusOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListPlusOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0       -> <cons>(Stmt,ListStarOfStmt0)
    ListStarOfDecl0       -> ListPlusOfDecl0
    ListStarOfDecl0       -> <nil>()
    ListStarOfDecl0       -> <conc>(ListStarOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0       -> <conc>(ListStarOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0       -> <conc>(ListPlusOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0       -> <conc>(ListPlusOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0       -> <cons>(Decl,ListStarOfDecl0)
    ListStarOfAssign0     -> ListPlusOfAssign0
    ListStarOfAssign0     -> <nil>()
    ListStarOfAssign0     -> <conc>(ListStarOfAssign0,ListStarOfAssign0)
    ListPlusOfAssign0     -> <conc>(ListStarOfAssign0,ListPlusOfAssign0)
    ListPlusOfAssign0     -> <conc>(ListPlusOfAssign0,ListStarOfAssign0)
    ListPlusOfAssign0     -> <conc>(ListPlusOfAssign0,ListPlusOfAssign0)
    ListPlusOfAssign0     -> <cons>(Assign,ListStarOfAssign0)
    OptRate0              -> <some>(Rate)
    OptRate0              -> <none>()
    ListStarOfVarDecl0    -> ListPlusOfVarDecl0
    ListStarOfVarDecl0    -> <nil>()
    ListStarOfVarDecl0    -> <conc>(ListStarOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListStarOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListPlusOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0    -> <conc>(ListPlusOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0    -> <cons>(VarDecl,ListStarOfVarDecl0)
    ListStarOfInstr0      -> ListPlusOfInstr0
    ListStarOfInstr0      -> <nil>()
    ListStarOfInstr0      -> <conc>(ListStarOfInstr0,ListStarOfInstr0)
    ListPlusOfInstr0      -> <conc>(ListStarOfInstr0,ListPlusOfInstr0)
    ListPlusOfInstr0      -> <conc>(ListPlusOfInstr0,ListStarOfInstr0)
    ListPlusOfInstr0      -> <conc>(ListPlusOfInstr0,ListPlusOfInstr0)
    ListPlusOfInstr0      -> <cons>(Instr,ListStarOfInstr0)
    ListStarOfFuncDecl0   -> ListPlusOfFuncDecl0
    ListStarOfFuncDecl0   -> <nil>()
    ListStarOfFuncDecl0   -> <conc>(ListStarOfFuncDecl0,ListStarOfFuncDecl0)
    ListPlusOfFuncDecl0   -> <conc>(ListStarOfFuncDecl0,ListPlusOfFuncDecl0)
    ListPlusOfFuncDecl0   -> <conc>(ListPlusOfFuncDecl0,ListStarOfFuncDecl0)
    ListPlusOfFuncDecl0   -> <conc>(ListPlusOfFuncDecl0,ListPlusOfFuncDecl0)
    ListPlusOfFuncDecl0   -> <cons>(FuncDecl,ListStarOfFuncDecl0)
    ListStarOfID0         -> ListPlusOfID0
    ListStarOfID0         -> <nil>()
    ListStarOfID0         -> <conc>(ListStarOfID0,ListStarOfID0)
    ListPlusOfID0         -> <conc>(ListStarOfID0,ListPlusOfID0)
    ListPlusOfID0         -> <conc>(ListPlusOfID0,ListStarOfID0)
    ListPlusOfID0         -> <conc>(ListPlusOfID0,ListPlusOfID0)
    ListPlusOfID0         -> <cons>(ID,ListStarOfID0)
    ListStarOfListElem0   -> ListPlusOfListElem0
    ListStarOfListElem0   -> <nil>()
    ListStarOfListElem0   -> <conc>(ListStarOfListElem0,ListStarOfListElem0)
    ListPlusOfListElem0   -> <conc>(ListStarOfListElem0,ListPlusOfListElem0)
    ListPlusOfListElem0   -> <conc>(ListPlusOfListElem0,ListStarOfListElem0)
    ListPlusOfListElem0   -> <conc>(ListPlusOfListElem0,ListPlusOfListElem0)
    ListPlusOfListElem0   -> <cons>(ListElem,ListStarOfListElem0)
    ListStarOfPartDecl0   -> ListPlusOfPartDecl0
    ListStarOfPartDecl0   -> <nil>()
    ListStarOfPartDecl0   -> <conc>(ListStarOfPartDecl0,ListStarOfPartDecl0)
    ListPlusOfPartDecl0   -> <conc>(ListStarOfPartDecl0,ListPlusOfPartDecl0)
    ListPlusOfPartDecl0   -> <conc>(ListPlusOfPartDecl0,ListStarOfPartDecl0)
    ListPlusOfPartDecl0   -> <conc>(ListPlusOfPartDecl0,ListPlusOfPartDecl0)
    ListPlusOfPartDecl0   -> <cons>(PartDecl,ListStarOfPartDecl0)
    ListStarOfDefinition0 -> ListPlusOfDefinition0
    ListStarOfDefinition0 -> <nil>()
    ListStarOfDefinition0 -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfStringChar0 -> <string>
    ListPlusOfStringChar0 -> <string>
    ListStarOfNbsFilter0  -> ListPlusOfNbsFilter0
    ListStarOfNbsFilter0  -> <nil>()
    ListStarOfNbsFilter0  -> <conc>(ListStarOfNbsFilter0,ListStarOfNbsFilter0)
    ListPlusOfNbsFilter0  -> <conc>(ListStarOfNbsFilter0,ListPlusOfNbsFilter0)
    ListPlusOfNbsFilter0  -> <conc>(ListPlusOfNbsFilter0,ListStarOfNbsFilter0)
    ListPlusOfNbsFilter0  -> <conc>(ListPlusOfNbsFilter0,ListPlusOfNbsFilter0)
    ListPlusOfNbsFilter0  -> <cons>(NbsFilter,ListStarOfNbsFilter0)
    Exp                   -> FuncCall(MethodRef,ListStarOfExp0)
    Stmt                  -> FuncCall(ID,ListStarOfExp0)
    Exp                   -> FuncCall(ID,ListStarOfExp0)
    Stmt                  -> FuncCall(MethodRef,ListStarOfExp0)
    Instr                 -> Instr(ListStarOfDecl0,ListStarOfStmt0)
    Instr                 -> Instr(ListStarOfDecl0,ListStarOfStmt0,StopCondition)
    ModHolder             -> ModHolder(ID,ID)
    ModHolder             -> ModHolder(ID)
    Ref                   -> FieldRef(ID,ID)
    Ref                   -> FieldRef(Obj,ID)
    EOF                   -> <string>
    CommentChar           -> <string>
    BackSlashChar         -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    TIME                  -> <string>
    MethodRef             -> MethodRef(Obj,ID)
    Obj                   -> Config()
    Obj                   -> Debug()
    Obj                   -> Region()
    Obj                   -> Module()
    Obj                   -> Meta()
    Stop                  -> Exp
    Stop                  -> Consensus()
    StopCondition         -> Until(Stop)
    StopCondition         -> Wait(Stop)
    Stmt                  -> Send(Type,ListStarOfAssign0,ID)
    Stmt                  -> For(Type,ID,ID,Stmt)
    Stmt                  -> Stop(ModHolder)
    Stmt                  -> ConnectPart(ModHolder,Exp)
    Stmt                  -> DisconnectPart(ModHolder,Exp)
    Stmt                  -> RotateCont(ModHolder,Exp)
    Stmt                  -> Rotate(ModHolder,Exp)
    Stmt                  -> Connect(ModHolder,ModHolder)
    Stmt                  -> Disconnect(ModHolder,ModHolder)
    Definition            -> GroupMum(ID)
    Definition            -> Group(ID,ListStarOfID0)
    Stmt                  -> Goto(ID,ID)
    Stmt                  -> Goto(ID)
    Instr                 -> Stmt
    Stmt                  -> If(Exp,Stmt)
    Stmt                  -> IfElse(Exp,Stmt,Stmt)
    Stmt                  -> Stmt(ListStarOfStmt0)
    Stmt                  -> Assign(Ref,Exp)
    Stmt                  -> Broadcast(ID,AssignLst,OptRate0)
    Stmt                  -> Unicast(ID,AssignLst,Exp,OptRate0)
    Rate                  -> Rate(Ref)
    Event                 -> Event(Exp)
    Event                 -> Event(ID,ID)
    Stmt                  -> EvHdlr
    EvHdlr                -> EvHdlr(Event,ListStarOfVarDecl0,ListStarOfStmt0)
    Definition            -> EvHdlr
    Definition            -> State(ID,ListStarOfVarDecl0,ListStarOfFuncDecl0,ListStarOfInstr0)
    AssignLst             -> AssignList(ListStarOfAssign0)
    Assign                -> Assign(Ref,Exp)
    Ref                   -> VarRef(ID)
    PartDecl              -> MetaPartDecl(ListStarOfID0)
    VarDecl               -> VarDecl(Type,ListPlusOfID0)
    Decl                  -> FuncDecl
    Decl                  -> Packet(ID,ListStarOfVarDecl0)
    Type                  -> ID
    ListElem              -> Elem(Type,ID)
    FuncDecl              -> FuncDecl(Type,ID,ListStarOfListElem0,ListStarOfDecl0,ListStarOfStmt0,Exp)
    FuncDecl              -> FuncDecl(ID,ListStarOfListElem0,ListStarOfDecl0,ListStarOfStmt0)
    Definition            -> ModuleNS(ListStarOfVarDecl0,ListStarOfFuncDecl0)
    Definition            -> MetaNS(ListStarOfPartDecl0,ListStarOfVarDecl0,ListStarOfFuncDecl0)
    ModuleDef             -> Module(ID)
    Start                 -> Start(ModuleDef,ListStarOfDefinition0,ListStarOfDecl0)
    Exp                   -> OrBit(Exp,Exp)
    Exp                   -> AndBit(Exp,Exp)
    Exp                   -> Or(Exp,Exp)
    Exp                   -> And(Exp,Exp)
    Exp                   -> Neq(Exp,Exp)
    Exp                   -> Eq(Exp,Exp)
    Exp                   -> GtEq(Exp,Exp)
    Exp                   -> LtEq(Exp,Exp)
    Exp                   -> Gt(Exp,Exp)
    Exp                   -> Lt(Exp,Exp)
    Exp                   -> Plus(Exp,Exp)
    Exp                   -> Div(Exp,Exp)
    Exp                   -> Mul(Exp,Exp)
    Exp                   -> Min(Exp,Exp)
    Exp                   -> Min(Exp)
    Exp                   -> Not(Exp)
    Exp                   -> Mod(Exp,Exp)
    Exp                   -> String(STRING)
    Exp                   -> ByteArr(ListStarOfExp0)
    Exp                   -> Par(Exp)
    Exp                   -> ModHolder(ModHolder)
    Exp                   -> Bool(Bool)
    Exp                   -> Const(Const)
    Exp                   -> Int(INT)
    MetaPart              -> MetaPart(ID)
    NbsFilter             -> in(ModHolder)
    NbsFilter             -> connSource(Exp)
    NbsFilter             -> connDest(Exp)
    NbsFilter             -> withMetaID(Exp)
    NbsFilter             -> inRegion(Exp)
    NbsFilter             -> connected(Exp)
    NbsFilter             -> metaPart(MetaPart)
    ConnFilter            -> ConnFilter(Exp,Exp)
    ConnFilter            -> ConnFilter(Exp)
    NbsOp                 -> NbsOp(ConnFilter)
    NbsOp                 -> NbsOp(ConnFilter,ListPlusOfNbsFilter0)
    Exp                   -> Nbs(NbsOp)
    Exp                   -> NbsCount(NbsOp)
    Exp                   -> Ref
    Core                  -> <string>
    Type                  -> <string>
    Const                 -> <string>
    Bool                  -> <string>
    String                -> <string>
    INT                   -> <string>
    ID                    -> <string>


regular tree grammar
  start Start
  productions
    ListStarOfExp0           -> ListPlusOfExp0
    ListStarOfExp0           -> <nil>()
    ListStarOfExp0           -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0           -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0           -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0           -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0           -> <cons>(Exp,ListStarOfExp0)
    ListStarOfStmt0          -> ListPlusOfStmt0
    ListStarOfStmt0          -> <nil>()
    ListStarOfStmt0          -> <conc>(ListStarOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0          -> <conc>(ListStarOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0          -> <conc>(ListPlusOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0          -> <conc>(ListPlusOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0          -> <cons>(Stmt,ListStarOfStmt0)
    ListStarOfDecl0          -> ListPlusOfDecl0
    ListStarOfDecl0          -> <nil>()
    ListStarOfDecl0          -> <conc>(ListStarOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0          -> <conc>(ListStarOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0          -> <conc>(ListPlusOfDecl0,ListStarOfDecl0)
    ListPlusOfDecl0          -> <conc>(ListPlusOfDecl0,ListPlusOfDecl0)
    ListPlusOfDecl0          -> <cons>(Decl,ListStarOfDecl0)
    ListStarOfID0            -> ListPlusOfID0
    ListStarOfID0            -> <nil>()
    ListStarOfID0            -> <conc>(ListStarOfID0,ListStarOfID0)
    ListPlusOfID0            -> <conc>(ListStarOfID0,ListPlusOfID0)
    ListPlusOfID0            -> <conc>(ListPlusOfID0,ListStarOfID0)
    ListPlusOfID0            -> <conc>(ListPlusOfID0,ListPlusOfID0)
    ListPlusOfID0            -> <cons>(ID,ListStarOfID0)
    ListStarOfMod0           -> ListPlusOfMod0
    ListStarOfMod0           -> <nil>()
    ListStarOfMod0           -> <conc>(ListStarOfMod0,ListStarOfMod0)
    ListPlusOfMod0           -> <conc>(ListStarOfMod0,ListPlusOfMod0)
    ListPlusOfMod0           -> <conc>(ListPlusOfMod0,ListStarOfMod0)
    ListPlusOfMod0           -> <conc>(ListPlusOfMod0,ListPlusOfMod0)
    ListPlusOfMod0           -> <cons>(Mod,ListStarOfMod0)
    ListStarOfAssign0        -> ListPlusOfAssign0
    ListStarOfAssign0        -> <nil>()
    ListStarOfAssign0        -> <conc>(ListStarOfAssign0,ListStarOfAssign0)
    ListPlusOfAssign0        -> <conc>(ListStarOfAssign0,ListPlusOfAssign0)
    ListPlusOfAssign0        -> <conc>(ListPlusOfAssign0,ListStarOfAssign0)
    ListPlusOfAssign0        -> <conc>(ListPlusOfAssign0,ListPlusOfAssign0)
    ListPlusOfAssign0        -> <cons>(Assign,ListStarOfAssign0)
    OptRate0                 -> <some>(Rate)
    OptRate0                 -> <none>()
    ListStarOfVarDecl0       -> ListPlusOfVarDecl0
    ListStarOfVarDecl0       -> <nil>()
    ListStarOfVarDecl0       -> <conc>(ListStarOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0       -> <conc>(ListStarOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0       -> <conc>(ListPlusOfVarDecl0,ListStarOfVarDecl0)
    ListPlusOfVarDecl0       -> <conc>(ListPlusOfVarDecl0,ListPlusOfVarDecl0)
    ListPlusOfVarDecl0       -> <cons>(VarDecl,ListStarOfVarDecl0)
    ListStarOfTryReg0        -> ListPlusOfTryReg0
    ListStarOfTryReg0        -> <nil>()
    ListStarOfTryReg0        -> <conc>(ListStarOfTryReg0,ListStarOfTryReg0)
    ListPlusOfTryReg0        -> <conc>(ListStarOfTryReg0,ListPlusOfTryReg0)
    ListPlusOfTryReg0        -> <conc>(ListPlusOfTryReg0,ListStarOfTryReg0)
    ListPlusOfTryReg0        -> <conc>(ListPlusOfTryReg0,ListPlusOfTryReg0)
    ListPlusOfTryReg0        -> <cons>(TryReg,ListStarOfTryReg0)
    ListStarOfEvHdlr0        -> ListPlusOfEvHdlr0
    ListStarOfEvHdlr0        -> <nil>()
    ListStarOfEvHdlr0        -> <conc>(ListStarOfEvHdlr0,ListStarOfEvHdlr0)
    ListPlusOfEvHdlr0        -> <conc>(ListStarOfEvHdlr0,ListPlusOfEvHdlr0)
    ListPlusOfEvHdlr0        -> <conc>(ListPlusOfEvHdlr0,ListStarOfEvHdlr0)
    ListPlusOfEvHdlr0        -> <conc>(ListPlusOfEvHdlr0,ListPlusOfEvHdlr0)
    ListPlusOfEvHdlr0        -> <cons>(EvHdlr,ListStarOfEvHdlr0)
    ListStarOfInstr0         -> ListPlusOfInstr0
    ListStarOfInstr0         -> <nil>()
    ListStarOfInstr0         -> <conc>(ListStarOfInstr0,ListStarOfInstr0)
    ListPlusOfInstr0         -> <conc>(ListStarOfInstr0,ListPlusOfInstr0)
    ListPlusOfInstr0         -> <conc>(ListPlusOfInstr0,ListStarOfInstr0)
    ListPlusOfInstr0         -> <conc>(ListPlusOfInstr0,ListPlusOfInstr0)
    ListPlusOfInstr0         -> <cons>(Instr,ListStarOfInstr0)
    ListStarOfFuncDecl0      -> ListPlusOfFuncDecl0
    ListStarOfFuncDecl0      -> <nil>()
    ListStarOfFuncDecl0      -> <conc>(ListStarOfFuncDecl0,ListStarOfFuncDecl0)
    ListPlusOfFuncDecl0      -> <conc>(ListStarOfFuncDecl0,ListPlusOfFuncDecl0)
    ListPlusOfFuncDecl0      -> <conc>(ListPlusOfFuncDecl0,ListStarOfFuncDecl0)
    ListPlusOfFuncDecl0      -> <conc>(ListPlusOfFuncDecl0,ListPlusOfFuncDecl0)
    ListPlusOfFuncDecl0      -> <cons>(FuncDecl,ListStarOfFuncDecl0)
    ListStarOfPayloadDecl0   -> ListPlusOfPayloadDecl0
    ListStarOfPayloadDecl0   -> <nil>()
    ListStarOfPayloadDecl0   -> <conc>(ListStarOfPayloadDecl0,ListStarOfPayloadDecl0)
    ListPlusOfPayloadDecl0   -> <conc>(ListStarOfPayloadDecl0,ListPlusOfPayloadDecl0)
    ListPlusOfPayloadDecl0   -> <conc>(ListPlusOfPayloadDecl0,ListStarOfPayloadDecl0)
    ListPlusOfPayloadDecl0   -> <conc>(ListPlusOfPayloadDecl0,ListPlusOfPayloadDecl0)
    ListPlusOfPayloadDecl0   -> <cons>(PayloadDecl,ListStarOfPayloadDecl0)
    ListStarOfParamListElem0 -> ListPlusOfParamListElem0
    ListStarOfParamListElem0 -> <nil>()
    ListStarOfParamListElem0 -> <conc>(ListStarOfParamListElem0,ListStarOfParamListElem0)
    ListPlusOfParamListElem0 -> <conc>(ListStarOfParamListElem0,ListPlusOfParamListElem0)
    ListPlusOfParamListElem0 -> <conc>(ListPlusOfParamListElem0,ListStarOfParamListElem0)
    ListPlusOfParamListElem0 -> <conc>(ListPlusOfParamListElem0,ListPlusOfParamListElem0)
    ListPlusOfParamListElem0 -> <cons>(ParamListElem,ListStarOfParamListElem0)
    ListStarOfFieldDecl0     -> ListPlusOfFieldDecl0
    ListStarOfFieldDecl0     -> <nil>()
    ListStarOfFieldDecl0     -> <conc>(ListStarOfFieldDecl0,ListStarOfFieldDecl0)
    ListPlusOfFieldDecl0     -> <conc>(ListStarOfFieldDecl0,ListPlusOfFieldDecl0)
    ListPlusOfFieldDecl0     -> <conc>(ListPlusOfFieldDecl0,ListStarOfFieldDecl0)
    ListPlusOfFieldDecl0     -> <conc>(ListPlusOfFieldDecl0,ListPlusOfFieldDecl0)
    ListPlusOfFieldDecl0     -> <cons>(FieldDecl,ListStarOfFieldDecl0)
    ListStarOfPartDecl0      -> ListPlusOfPartDecl0
    ListStarOfPartDecl0      -> <nil>()
    ListStarOfPartDecl0      -> <conc>(ListStarOfPartDecl0,ListStarOfPartDecl0)
    ListPlusOfPartDecl0      -> <conc>(ListStarOfPartDecl0,ListPlusOfPartDecl0)
    ListPlusOfPartDecl0      -> <conc>(ListPlusOfPartDecl0,ListStarOfPartDecl0)
    ListPlusOfPartDecl0      -> <conc>(ListPlusOfPartDecl0,ListPlusOfPartDecl0)
    ListPlusOfPartDecl0      -> <cons>(PartDecl,ListStarOfPartDecl0)
    ListStarOfDefinition0    -> ListPlusOfDefinition0
    ListStarOfDefinition0    -> <nil>()
    ListStarOfDefinition0    -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0    -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0    -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0    -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0    -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfStringChar0    -> <string>
    ListPlusOfStringChar0    -> <string>
    ListStarOfNbsFilter0     -> ListPlusOfNbsFilter0
    ListStarOfNbsFilter0     -> <nil>()
    ListStarOfNbsFilter0     -> <conc>(ListStarOfNbsFilter0,ListStarOfNbsFilter0)
    ListPlusOfNbsFilter0     -> <conc>(ListStarOfNbsFilter0,ListPlusOfNbsFilter0)
    ListPlusOfNbsFilter0     -> <conc>(ListPlusOfNbsFilter0,ListStarOfNbsFilter0)
    ListPlusOfNbsFilter0     -> <conc>(ListPlusOfNbsFilter0,ListPlusOfNbsFilter0)
    ListPlusOfNbsFilter0     -> <cons>(NbsFilter,ListStarOfNbsFilter0)
    Exp                      -> FuncCall(MethodRef,ListStarOfExp0)
    Stmt                     -> FuncCall(ID,ListStarOfExp0)
    Exp                      -> FuncCall(ID,ListStarOfExp0)
    Stmt                     -> FuncCall(MethodRef,ListStarOfExp0)
    Instr                    -> Instr(ListStarOfDecl0,ListStarOfStmt0)
    Instr                    -> Instr(ListStarOfDecl0,ListStarOfStmt0,StopCondition)
    ModHolderRef             -> ModHolderRef(ID,ID)
    ModHolderRef             -> ModHolderRef(ID)
    Ref                      -> FieldRef(ID,ID)
    Ref                      -> FieldRef(Obj,ID)
    EOF                      -> <string>
    CommentChar              -> <string>
    BackSlashChar            -> <string>
    StringChar               -> <string>
    STRING                   -> <string>
    TIME                     -> <string>
    MethodRef                -> MethodRef(Obj,ID)
    Stop                     -> Exp
    Stop                     -> Consensus()
    StopCondition            -> Until(Stop)
    StopCondition            -> Wait(Stop)
    Stmt                     -> For(Type,ID,ID,Block)
    Stmt                     -> Stop(ModHolderRef)
    Stmt                     -> ConnectPart(ModHolderRef,Exp)
    Stmt                     -> DisconnectPart(ModHolderRef,Exp)
    Stmt                     -> RotateCont(ModHolderRef,Exp)
    Stmt                     -> Rotate(ModHolderRef,Exp)
    Stmt                     -> Connect(ModHolderRef,ModHolderRef)
    Stmt                     -> Disconnect(ModHolderRef,ModHolderRef)
    TryReg                   -> TryRegion(ID,ID,ListStarOfID0,ListStarOfID0)
    Mod                      -> Mod(ID)
    GroupDef                 -> GroupNum(ID)
    GroupDef                 -> Group(ID,ListStarOfMod0)
    Stmt                     -> Goto(ID,ID)
    Stmt                     -> Goto(StateRef)
    Instr                    -> Stmt
    StateRef                 -> StateRef(ID)
    Stmt                     -> If(Exp,Block)
    Stmt                     -> IfElse(Exp,Block,Block)
    Block                    -> Block(ListStarOfStmt0)
    Block                    -> Block(Stmt)
    Stmt                     -> Assign(Ref,Exp)
    Stmt                     -> Send(PacketRef,ListStarOfAssign0,Exp)
    Stmt                     -> Broadcast(PacketRef,AssignLst,OptRate0)
    Stmt                     -> Unicast(PacketRef,AssignLst,Exp,OptRate0)
    Rate                     -> Rate(Ref)
    Event                    -> Event(Exp)
    Event                    -> Receive(PacketRef,ID)
    PacketRef                -> PacketRef(ID)
    Stmt                     -> EvHdlr
    EvHdlr                   -> EvHdlr(Event,ListStarOfVarDecl0,ListStarOfStmt0)
    Definition               -> EvHdlr
    Definition               -> State(ID,ListStarOfEvHdlr0,ListStarOfTryReg0)
    Definition               -> State(ID,ListStarOfVarDecl0,ListStarOfFuncDecl0,ListStarOfInstr0)
    AssignLst                -> AssignList(ListStarOfAssign0)
    Assign                   -> Assign(PayloadRef,Exp)
    PayloadRef               -> PayloadRef(ID)
    Ref                      -> VarRef(ID)
    PartDecl                 -> MetaPartDecl(ListStarOfID0)
    PayloadDecl              -> PayloadDecl(Type,ID)
    FieldDecl                -> FieldDecl(Type,ID)
    VarDecl                  -> VarDecl(Type,ID)
    Decl                     -> FuncDecl
    Decl                     -> Packet(ID,ListStarOfPayloadDecl0)
    Type                     -> ID
    ParamListElem            -> Param(Type,ID)
    FuncDecl                 -> FuncDecl(Type,ID,ListStarOfParamListElem0,ListStarOfDecl0,ListStarOfStmt0,Exp)
    FuncDecl                 -> FuncDecl(ID,ListStarOfParamListElem0,ListStarOfDecl0,ListStarOfStmt0)
    Module                   -> Module()
    Meta                     -> Meta()
    Definition               -> Class(Module,ListStarOfFieldDecl0,ListStarOfFuncDecl0)
    Definition               -> Class(Meta,ListStarOfPartDecl0,ListStarOfFieldDecl0,ListStarOfFuncDecl0)
    Definition               -> GroupDef
    Start                    -> Program(ID,ListStarOfDefinition0,ListStarOfDecl0)
    Exp                      -> OrBit(Exp,Exp)
    Exp                      -> AndBit(Exp,Exp)
    Exp                      -> Or(Exp,Exp)
    Exp                      -> And(Exp,Exp)
    Exp                      -> Neq(Exp,Exp)
    Exp                      -> Eq(Exp,Exp)
    Exp                      -> GtEq(Exp,Exp)
    Exp                      -> LtEq(Exp,Exp)
    Exp                      -> Gt(Exp,Exp)
    Exp                      -> Lt(Exp,Exp)
    Exp                      -> Plus(Exp,Exp)
    Exp                      -> Div(Exp,Exp)
    Exp                      -> Mul(Exp,Exp)
    Exp                      -> Min(Exp,Exp)
    Exp                      -> Min(Exp)
    Exp                      -> Not(Exp)
    Exp                      -> Mod(Exp,Exp)
    Exp                      -> String(STRING)
    Exp                      -> ByteArr(ListStarOfExp0)
    Exp                      -> Par(Exp)
    Exp                      -> ModHolderRef
    Exp                      -> Bool(Bool)
    Exp                      -> Const(Const)
    Exp                      -> Int(INT)
    MetaPart                 -> MetaPart(ID)
    NbsFilter                -> in(ModHolderRef)
    NbsFilter                -> connSource(Exp)
    NbsFilter                -> connDest(Exp)
    NbsFilter                -> withMetaID(Exp)
    NbsFilter                -> inRegion(Exp)
    NbsFilter                -> connected(Exp)
    NbsFilter                -> metaPart(MetaPart)
    ConnFilter               -> ConnFilter(Exp,Exp)
    ConnFilter               -> ConnFilter(Exp)
    NbsOp                    -> NbsOp(ConnFilter)
    NbsOp                    -> NbsOp(ConnFilter,ListPlusOfNbsFilter0)
    Exp                      -> Nbs(NbsOp)
    Exp                      -> NbsCount(NbsOp)
    Exp                      -> Ref
    Obj                      -> Config()
    Obj                      -> Debug()
    Obj                      -> Region()
    Obj                      -> Module()
    Obj                      -> Meta()
    Type                     -> ByteArr()
    Type                     -> Void()
    Type                     -> Byte()
    Type                     -> Boolean()
    Core                     -> <string>
    Const                    -> <string>
    Bool                     -> <string>
    String                   -> <string>
    INT                      -> <string>
    ID                       -> <string>

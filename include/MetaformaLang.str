module MetaformaLang

signature
  constructors
                 : String -> STRING
    ModHolderRef : ID -> ModHolderRef
    ModHolderRef : ID * ID -> ModHolderRef
                 : VarRef -> Obj
                 : SysObj -> Obj
    VarRef       : ID -> VarRef
    MethodRef    : Obj * ID -> MethodRef
    FuncRef      : ID -> FuncRef
                 : Exp -> Stop
    Consensus    : Stop
    Until        : Stop -> StopCondition
    Wait         : Stop -> StopCondition
    MetaFieldRef : ID -> MetaFieldRef
    Mod          : ID -> Mod
    Group        : ID -> GroupDef
    Group        : ID * List(Mod) -> GroupDef
    Instr        : List(EvHdlr) * List(VarDecl) * List(Stmt) -> Instr
    Instr        : List(EvHdlr) * List(VarDecl) * List(Stmt) * StopCondition -> Instr
                 : Stmt -> Instr
    OrientRef    : ID -> OrientRef
    StateRef     : ID -> StateRef
    Block        : List(Stmt) -> Block
    Block        : Stmt -> Block
    Rate         : Ref -> Rate
                 : Exp -> EventExp
    Receive      : PacketVarDecl -> Receive
    PacketRef    : ID -> PacketRef
    FuncCall     : FuncRef * List(Exp) -> Stmt
    FuncCall     : MethodRef * List(Exp) -> Stmt
    Stop         : ModHolderRef -> Stmt
    RotateCont   : ModHolderRef * Exp -> Stmt
    Rotate       : ModHolderRef * Exp -> Stmt
    Connect      : ModHolderRef * Exp -> Stmt
    Disconnect   : ModHolderRef * Exp -> Stmt
    TryRegion    : StateRef * OrientRef * List(MetaFieldRef) * List(MetaFieldRef) -> Stmt
    Goto         : ID * ID -> Stmt
    Goto         : StateRef -> Stmt
    If           : Exp * Block -> Stmt
    IfElse       : Exp * Block * Block -> Stmt
    Assign       : Ref * Exp -> Stmt
    Unicast      : PacketRef * AssignList * Nbs * Option(Rate) -> Stmt
    If           : EventExp * List(VarDecl) * List(Stmt) -> Stmt
    EvHdlr       : Receive * List(VarDecl) * List(Stmt) -> EvHdlr
    AssignList   : List(AssignElem) -> AssignList
    AssignElem   : PayloadRef * ID -> AssignElem
    PayloadRef   : ID -> PayloadRef
    FieldRef     : Obj * ID -> Ref
    FieldRef     : Obj * ModuleFieldID -> Ref
    VarRef       : ID -> Ref
    MetaPartDecl : List(MetaPart) -> PartDecl
    VarDecl      : PacketRef * ID -> PacketVarDecl
    PayloadDecl  : Type * ID -> PayloadDecl
    FieldDecl    : Type * ID -> FieldDecl
    VarDecl      : Type * ID -> VarDecl
    State        : ID * List(EvHdlr) * List(VarDecl) * List(FuncDecl) * List(Instr) -> Declaration
                 : FuncDecl -> Declaration
    Param        : Type * ID -> ParamListElem
    FuncDecl     : Type * ID * List(ParamListElem) * List(Declaration) * List(Stmt) * Exp -> FuncDecl
    FuncDecl     : ID * List(ParamListElem) * List(Declaration) * List(Stmt) -> FuncDecl
    Region       : Region
    Robot        : Robot
    Module       : Module
    Meta         : Meta
    BorderBottom : Direction
    BorderTop    : Direction
    BorderRight  : Direction
    BorderLeft   : Direction
    BorderItem   : Direction * Exp -> BorderItem
    BorderDecl   : List(BorderItem) -> BorderDecl
                 : EvHdlr -> Definition
    Packet       : ID * List(PayloadDecl) -> Definition
    Class        : Region * BorderDecl -> Definition
    Class        : Module * List(FieldDecl) * List(FuncDecl) -> Definition
    Class        : Meta * Option(PartDecl) * List(FieldDecl) * List(FuncDecl) -> Definition
    Class        : Robot * List(FuncDecl) -> Definition
                 : GroupDef -> Definition
                 : StateRef -> ModHolderOrStateRef
                 : ModHolderRef -> ModHolderOrStateRef
    VisItem      : ModHolderOrStateRef * Color * Int -> VisItem
    VisGroup     : ID * List(VisItem) -> VisGroup
    Visualize    : List(VisGroup) -> Visualize
    Program      : ID * Option(Visualize) * List(Definition) * List(Declaration) -> Start
                 : String -> ModuleFieldID
    MetaPart     : ID -> MetaPart
                 : ModHolderRef -> NbsFilter
    NbsFilter    : NbsFilterKey * Exp -> NbsFilter
    NbsOp        : List(NbsFilter) -> NbsOp
    Nbs          : NbsOp -> Nbs
    FuncCall     : MethodRef * List(Exp) -> Exp
    FuncCall     : FuncRef * List(Exp) -> Exp
    OrientMatch  : List(OrientRef) -> Exp
    OrBit        : Exp * Exp -> Exp
    AndBit       : Exp * Exp -> Exp
    Or           : Exp * Exp -> Exp
    And          : Exp * Exp -> Exp
    Neq          : Exp * Exp -> Exp
    Eq           : Exp * Exp -> Exp
    GtEq         : Exp * Exp -> Exp
    LtEq         : Exp * Exp -> Exp
    Gt           : Exp * Exp -> Exp
    Lt           : Exp * Exp -> Exp
    Plus         : Exp * Exp -> Exp
    Div          : Exp * Exp -> Exp
    Mul          : Exp * Exp -> Exp
    Min          : Exp * Exp -> Exp
    Min          : Exp -> Exp
    Not          : Exp -> Exp
    Modulo       : Exp * Exp -> Exp
    String       : STRING -> Exp
    ByteArr      : List(Exp) -> Exp
    Par          : Exp -> Exp
                 : ModHolderRef -> Exp
    Bool         : Bool -> Exp
    Const        : ConstLan -> Exp
    Const        : Const -> Exp
    Int          : INT -> Exp
    NbsCount     : NbsOp -> Exp
                 : Ref -> Exp
    Config       : SysObj
    Debug        : SysObj
    Region       : SysObj
    Module       : SysObj
    Meta         : SysObj
    Robot        : SysObj
                 : ID -> Type
    ByteArr      : Type
    Void         : Type
    Byte         : Type
    Boolean      : Type
                 : String -> NbsFilterKey
                 : String -> Const
                 : String -> ConstLan
                 : String -> Bool
                 : String -> Color
                 : String -> INT
                 : String -> ID


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)

program Brandt
 
group InsideLifter [Top,Bottom]
group OutsideLifter [Top,Bottom]
group Inside
group Outside


sequence Flipover {
	
	gradientInit();
	gradientPropagate();

	do  {
		if (gradPri == 0 && gradSec < 3 || gradSec==0 && gradPri<3) { 
			group = @Outside;
		}
		if (gradPri > 0 && gradSec > 0) { 
			group = @Inside;
		}
		if (gradPri==3 && gradSec==1) { 
			id = Top@InsideLifter;
		}
		if (gradPri==1 && gradSec==3) { 
			id = Bottom@InsideLifter;
		}
		if (gradPri==2 && gradSec==0) { 
			id = Top@OutsideLifter;
		}
		if (gradPri==0 && gradSec==2) { 
			id = Bottom@OutsideLifter;
		}
	} wait (consensus());
					
	
	disconnect(@Outside, @Inside);
	disconnect(@OutsideLifter, @Inside);
	
	do {
		rotate(Top@InsideLifter,HALF);
		rotate(Bottom@InsideLifter,-HALF);
	} wait(consensus());
	
	do {
		rotate(Top@OutsideLifter,HALF);
		rotate(Bottom@OutsideLifter,-HALF);
	} wait(consensus());
	
	connect(@Outside, @Inside);
	connect(@OutsideLifter, @Inside);
	
	do {
		when (receive (PacketSymmetry p)) {
			fixSymmetry(p.connSource,p.connDest);
		}
		if (isRef) {
			broadcast PacketSymmetry ();	
		}
		
	} until(consensus());
	
	restoreID();
	
	region.finish();
}

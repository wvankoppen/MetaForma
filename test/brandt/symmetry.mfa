function symmetryFix (boolean isReq, byte connectorSource, byte connectorDest) {
	
	if (isFEMALE(connectorDest)) {
		if (!committed()) {
			if (isReq == isNORTH(connectorDest)) switchNorthSouth();
						
			switchEastWest(isNORTH(p.getSourceConnector()) == isWEST(connector),isSOUTH(connectorDest));
		}				
		
		if (isReq) {
			unicast(SYMMETRY, REQ, FEMALE&NORTH);
		}
		unicast(SYMMETRY, ACK, FEMALE&SOUTH);
	}
	else if (isMALE(connectorDest)) {
		if (!isEAST(connectorDest)) {
			switchEastWest();
		}
		if (isEAST(connectorSource) && !isSOUTH(connectorDest) || isWEST(connectorSource) && !isNORTH(connectorDest)) {
			switchNorthSouth();
		}
		
		if (isReq) {
			unicast(SYMMETRY, REQ, MALE&WEST);
		}
		unicast(SYMMETRY, ACK, MALE&EAST);
	}
	
	commit();
}
	
	
function gradientSend (boolean isSource, Var var) {
	if (isSource) {
		var = 1;
	}
	
	broadcast(GRADIENT,REQ,var.index(),var);
}



package Brandt

group UpLifter [Top,Bottom,Left,Right]
group Dummy [Left,Right]

 
sequence FlipThrough {
	
	if (orientation matches BOTTOM_RIGHT,RIGHT_TOP, LEFT_BOTTOM) {
		QUART = 90;
		HALF = 180; 
	}
	else {
		QUART = -90; 
		HALF = -180;
	}
	
	module.gradientInit();
	do {
		module.gradientPropagate();
	} until (config.propagationTime);
	
	do {
		when {
			case gradPri==1 && gradSec==1: module.id = @UpLifter.Left;
			case gradPri==2 && gradSec==0: module.id = @UpLifter.Right;
			case gradPri==1 && gradSec==0: module.id = @Dummy.Left;
			case gradPri==0 && gradSec==0: module.id = @UpLifter.Top;
			case gradPri==2 && gradSec==1: module.id = @Dummy.Right;
			case gradPri==3 && gradSec==1: module.id = @UpLifter.Bottom;			
		}
		isRef = gradPri==3 && gradSec==0;
	}
	
	do  {				 
		disconnect(@UpLifter.Left,@Dummy.Left);
		disconnect(@UpLifter.Right,@Dummy.Right);
	} 
	
	do  {				
		rotate(@UpLifter.Left, QUART);
		rotate(@UpLifter.Right, QUART);
	} 
	
	disconnect(@UpLifter.Left,@Dummy.Right);
	rotate(@UpLifter.Bottom, HALF);
	
	do  {				
		rotate(@UpLifter.Left, QUART);
		rotate(@UpLifter.Right, QUART);
	} 
	
	do  {				
		// rotate(@UpLifter.Right, HALF);
		rotate(@UpLifter.Top, HALF);
	}
	 
	module.restoreID();
	connect(@X, @X);	
	module.fixSymmetry(isRef);
	region.finish();	
}
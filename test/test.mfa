program Testxyz

group Floor
group Clover[West]

meta {
	part [Left, Top, Middle, Right];	
	
	byte Top;
	byte Bottom;
	byte Left;
	byte Right;
	byte TopLeft;
	byte TopRight;
	byte BottomLeft; 
	byte BottomRight;
	
	void metaNeighborHook (byte metaID, byte destConn) { 
		if (metaID != module.id && module.metaID != 0) {
			if (destConn == 5 || destConn == 6) {
				Right = metaID;
			}
			if (destConn == 2 || destConn == 7) {
				Top = metaID;
			}
			if (destConn == 0 || destConn == 3) {
				Left = metaID;
			}
			if (destConn == 1 || destConn == 4) {
				Bottom = metaID;
			}
		}
	}
		
}



module  {
	byte gradPri;
	byte gradSec;
	boolean isRef;
	boolean sourcePri;
	boolean sourceSec;
	byte id;
	byte metaID;	
	
	// border left = $(EAST&MALE, inRegion:true) && !$(WEST&NORTH&MALE);
	// border right = $(EAST&MALE, inRegion:true) && !$(WEST&NORTH&MALE);
	// border top = $(EAST&MALE, inRegion:true) && !$(WEST&NORTH&MALE);
	// border bottom = $(EAST&MALE, inRegion:true) && !$(WEST&NORTH&MALE);
	
	void gradientPropagate () {
		// For gradients, the state does not matter so this is global	
		when (receive (Gradient p)) {
			boolean updated;
			
			if (gradPri > p.metaID + 1) {
				gradPri = p.pri + 1;
				updated = true;
			}
			if (gradSec > p.sec + 1) {
				gradSec = p.sec + 1;
				updated = true;
			}
			if (updated) {
				gradientPropagate();
			}
		}

		 updated = false;
		if (sourcePri){
			gradPri = 0;
		}
		
		if (sourceSec) {
			gradSec = 0;
		}
		broadcast Gradient(pri=gradPri, sec=gradSec);
	}
	

	void gradientInit() {
		// sourcePri = orientation.primaryBorder();
		// sourceSec = orientation.secondaryBorder();
		
		gradPri = MAX_BYTE;
		gradSec = MAX_BYTE;			
	}
}


packet Gradient {
	byte pri;
	byte sec;
}
package FourWheeler

byte STEER_DEGREES = 12 

strategy {
	goto Drive;
}

sequence Drive {
	when (module.id == @Axis.Front && module.proximity() > PROXIMITY) {
		goto ObstacleAvoid;
	} 
	
	do { 
		when {
			// case #(connSource:SOUTH&EAST&FEMALE, connDest:EAST)>0:								module.group = @LeftWheel;
			// case #(connSource:SOUTH&EAST&FEMALE, connDest:WEST)>0:								module.group = @RightWheel;
			// case (#(@RightWheel)>0 || #(@LeftWheel)>0) && #(connSource: NORTH&EAST&FEMALE)==0:	module.id = @Axis.Front;
			// case (#(@RightWheel)>0 || #(@LeftWheel)>0) && #(connSource: NORTH&EAST&FEMALE)==1:	module.id = @Axis.Back;
			// case #()==2: 																		module.id = @Axis.Driver;
			case module.tiltZ() > 50 && #(connSource:MALE)>=2 && #()==3:		module.id = @Axis.Front;
			case module.tiltZ() > 50 && #(connSource:FEMALE)>=2 && #()==3:		module.id = @Axis.Back;
			case module.tiltZ() < 40 && #(connDest:MALE&EAST|FEMALE&WEST)==1:	module.group = @LeftWheel;
			case module.tiltZ() < 40 && #(connDest:FEMALE&EAST|MALE&WEST)==1:	module.group = @RightWheel;
			case #(@Axis)==2: 													module.id = @Axis.Driver;	
		}
	} until (config.assignTime);
		
	meta.drive(FORWARD,FORWARD);
}


// Turn
// sequence ObstacleAvoid {	
// 	meta.halt(); 
// 	meta.steer(STEER_DEGREES);
// 		
// 	do {
// 		meta.drive (BACKWARD,BACKWARD);	
// 	} wait(TIME_BACKWARD);
// 	
// 	meta.halt();
// 	
// 	meta.steer(-STEER_DEGREES);
// 	
// 	goto Drive;
// }
